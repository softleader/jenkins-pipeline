#!groovy

pipeline {
    agent any 

    stages {

        stage('pull'){
            steps {
                ${command} "docker pull ${dockerRegistry}/${image}"
            }
        }
        
        stage('undeploy') {
            steps {
                script {
                    try {
                        ${command} "docker stop ${image}"
                    } catch(Exception e) {
                    }
                    try {
                        ${command} "docker rm ${image}"
                    } catch(Exception e) {
                    }
                    try {
                        ${command} "docker rmi ${dockerRegistry}/${image}"
                    } catch(Exception e) {
                    }
                }
            }
        }
       
        stage('docker run') {
            steps {
                ${command} "docker run -itd -m 1024m --memory-swap 1024m --name ${image} --net softleader ${dockerRegistry}/${image}"
            }
        }
    }
}
