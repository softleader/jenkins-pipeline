#!groovy

pipeline {
    agent any 

    stages {

        stage('docker pull'){
            steps {
                bat "docker pull ${dockerRegistry}/${image}"
            }
        }
        
        stage('undeploy') {
            steps {
                script {
                    try {
                        bat "docker stop ${image}"
                    } catch(Exception e) {
                    }
                    try {
                        bat "docker rm ${image}"
                    } catch(Exception e) {
                    }
                    try {
                        bat "docker rmi ${dockerRegistry}/${image}"
                    } catch(Exception e) {
                    }
                }
            }
        }
       
        stage('docker run') {
            steps {
                bat "docker run -itd -m ${memory} --memory-swap ${memory} --name ${image} --net softleader ${args} ${dockerRegistry}/${image}"
            }
        }
    }
}
